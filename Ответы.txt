№1
Контейнер set, реализующий сущности множество и мультимножество, используется в случаях:
1) Когда необходима данные необходимо хранить сразу отсортированными
2) Когда необходимо хранить уникальные данные и запретить появление повторяющихся(set) (multiset позволяет хранить дубликаты)
3)Когда необходимо обеспечить быстрый поиск элементов в контейнере

№2
Качественная хэш-функция должна удовлетворять следущим требованиям:
1) значение хеш-функции быстро вычисляется для любого элемента
2) хеш-функция является детерминированной, то есть один и тот же элемент приводит к одному и тому же хеш-значению
3) невозможно найти два разных элемента с одинаковым хеш-значением

№3
Коллизии в хэш-таблицах - ситуации, когда разным ключам соответствует одно значение хэш-фунции. Способы решения проблемы: создание списков ключей, имеющих одинаковые значения хэш-функций или поиск свободного места в таблице для повторяющихся ключей.

№4
Худший случай - когда N элементов содержит хеш в один и тот же сегмент. Тогда для этого набора данных удаление и поиск также будут O(N).

№5
Boost.Multiindex позволяет создать класс для хранения и доступа к объектам по более чем одному ключу или их комбинациям. Огромное преимущество multi_index - его скорость.